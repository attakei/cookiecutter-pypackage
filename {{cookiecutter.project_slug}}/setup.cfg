{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:{{ cookiecutter.project_slug }}/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[metadata]
name = {{ cookiecutter.project_slug }}
version = {{ cookiecutter.version }}
description = {{ cookiecutter.project_short_description }}
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
long_description = file: README.rst
keywords = {{ cookiecutter.project_slug }}
{%- if cookiecutter.open_source_license in license_classifiers %}
license_file = LICENSE
{%- endif %}
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    Natural Language :: English
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7

[options]
zip_safe = False
include_package_data = True
packages = find:
install_requires =
    {%- if cookiecutter.command_line_interface|lower == 'click' %}Click>=6.0{%- endif %}
setup_requires =
    {%- if cookiecutter.use_pytest == 'y' %}pytest-runner{%- endif %}
tests_require =
    {%- if cookiecutter.use_pytest == 'y' %}pytest{%- endif %}

[options.packages.find]
include =
    {{ cookiecutter.project_slug }}

{%- if 'no' not in cookiecutter.command_line_interface|lower %}
[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }} = {{ cookiecutter.project_slug }}.cli:main
{%- endif %}

[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
{%- if cookiecutter.use_pytest == 'y' %}
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']
{%- endif %}

